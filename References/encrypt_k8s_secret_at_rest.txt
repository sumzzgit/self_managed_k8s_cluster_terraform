Ref -> https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/
       https://youtu.be/8zMfhrFDqug?si=Ka8X_euazsfg5ykI
       https://youtu.be/LTc5XV5Zr9M?si=BJ72ZjAL55CYEBkz

-> the secret values are stored in plane text in the etcd server , so to encypt that there are many encryption provider in the kubernetes .

-> there are many encryption providers like aescbc , aesgcm , kms v1 (deprecated since Kubernetes v1.28) , 
kms v2 and secretbox . but aescbc is the easiest way to do because it uses the single encryption key . 

-> the main difference in the providers is that they use the different algorithms to encrypt the data.

steps -> 
-> create the base64 encoded random key ( shoud be 16 , 24 and 32 char )
    head -c 32  /dev/urandom | base64

-> now create the yaml file for the encryption provider 

---
apiVersion: apiserver.config.k8s.io/v1
kind: EncryptionConfiguration
resources:
  - resources:
      - secrets
    providers:
      - aescbc:
          keys:
            - name: key1
              # See the following text for more details about the secret value
              secret: <BASE 64 ENCODED SECRET>
      - identity: {} # this fallback allows reading unencrypted secrets;
                     # for example, during initial migration

keep this file in the /etc/kubernetes/pki/encryption.yaml  , this is because the /etc/kubernetes/pki is already mounted in the api-server.yml file ( means this is already mounted to api server pod )

-> now edit the kube-apiserver.yml file in the /etc/kubernetes/manifests/ and add the line in the command 
"--encryption-provider-config=/etc/kubernetes/pki/encryption.yaml 

-> now the api server will restart 

-> the secrets before applying this will not be encrypted so to encrypt those use command 
kubectl get secrets --all-namespaces -o json | kubectl replace -f - 

-> to check the etcd use command 
kubectl -n kube-system exec -it <etcd_pod_name> -- sh -c \ 
"ETCDCTL_API=3 ETCDCTL_CACERT=/etc/kubernetes/pki/etcd/ca.crt \
ETCDCTL_KEY=/etc/kubernetes/pki/etcd/server.key \
ETCDCTL_CERT=/etc/kubernetes/pki/etcd/server.crt \
etcdctl --endpoints=https://127.0.0.1:2379 get /registry/secrets/<namespace>/<secret_name>"
