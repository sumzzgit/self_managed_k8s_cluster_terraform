apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs:
    - 127.0.0.1
    - 13.200.243.20
  extraArgs:
    bind-address: "0.0.0.0"
    cloud-provider: external
clusterName: k8s-test
scheduler:
  extraArgs:
    bind-address: "0.0.0.0"
controllerManager:
  extraArgs:
    bind-address: "0.0.0.0"
    cloud-provider: external
networking:
  podSubnet: "10.244.0.0/24"
  serviceSubnet: "10.244.0.0/16"
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
nodeRegistration:
  name: ip-10-100-102-49.ap-south-1.compute.internal
  kubeletExtraArgs:
    cloud-provider: external


--------------------------------------

apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
metadata:
  name: test-k8s # Replace with your desired cluster name
networking:
  podSubnet: 10.120.0.0/16
apiServer:
  certSANs:
    - 127.0.0.1
    - 3.110.103.34
  extraArgs:
    bind-address: "0.0.0.0"
    cloud-provider: aws
controllerManager:
  extraArgs:
    cloud-provider: aws
    cloud-config: /etc/kubernetes/aws.conf  # Path to the AWS configuration file
    allocate-node-cidrs: "true"
    configure-cloud-routes: "false"
scheduler:
  extraArgs:
    cloud-provider: aws
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
nodeRegistration:
  name: ip-10-100-102-31.ap-south-1.compute.internal
  kubeletExtraArgs:
    cloud-provider: aws
    cloud-config: /etc/kubernetes/aws.conf  # Path to the AWS configuration file


--------------------------
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: JoinConfiguration
discovery:
  bootstrapToken:
    token: 60e15n.ad5x8b9hv23mf4g5  
    apiServerEndpoint: "10.100.102.49:6443"
    caCertHashes:
      - "sha256:0e1c38d79194a81c06f3389db2f3a6b15b84e47462d440ba47a7c09a7b84c8af" 
nodeRegistration:
  name: ip-10-100-102-163.ap-south-1.compute.internal
  kubeletExtraArgs:
    cloud-provider: external

